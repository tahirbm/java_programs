//multithreading in Runnable interface
class MyRunnable implements Runnable{
  public void run(){
    for(int i=0;i<5;i++){
      System.out.println("child thread");
    }
  }
}
public class Multithreading{
  public static void main(String[] args){
    MyRunnable mr=new MyRunnable();
    Thread s=new Thread(mr);
    s.start();
    for(int i=0;i<5;i++){
      System.out.println("main thread");
    }
  }
}
---------------------------------------------------------------------

//illustarting colletion 
import java.util.*;
class Collection1{
  public static void main(String[] args) throws Exception{
    Collection c=new ArrayList();
    c.add("T");
    c.add("A");
    c.add("H");
    c.add("I");
    c.add("R");
    System.out.println(c);
    System.out.println(c.size());
    ArrayList a=new ArrayList();
    a.add("B");
    a.add("M");
    System.out.println(a);
    System.out.println(c.removeAll(a));
    System.out.println(c);
    System.out.println(c.size());
    System.out.println(c.removeAll(a));
    System.out.println(c);

    Iterator i=c.iterator();
    while(i.hasNext())
      System.out.println(i.next()+" ");
    
  }
}
----------------------------------------------------------------------------------------
//employee collection objects
import java.util.*;
class Employee{
 int id;
   String name;
   int salary;
  public void setId(int id){
  this.id=id;
  }
  public void setName(String name){
    this.name=name;
  }
  public void setSalary(int salary){
    this.salary=salary;
  }
  public int getId(){
    return id;
  }
  public String getName(){
    return name;
  }
  public int getSalary(){
    return salary;
  }
}
class CollEmployee {
  public static void main(String[] args) throws Exception{
    ArrayList a1=new ArrayList();
    Employee e1=new Employee();
    e1.setId(100);
    e1.setName("Tahir");
    e1.setSalary(50000);
    System.out.println(e1);
    a1.add(101);
    a1.add("Xyz");
    a1.add(100000);
    System.out.println(a1);
    Iterator I=a1.iterator();
    while(I.hasNext())
      System.out.println(I.nexxt());
  }
}